/* Copyright (C) 2013 The giomm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <giomm/tlsdatabase.h>
#include <glibmm/interface.h>

_DEFS(giomm,gio)
_PINCLUDE(glibmm/private/interface_p.h)
_PINCLUDE(giomm/private/tlsdatabase_p.h)
_PINCLUDE(gio/gio.h)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
typedef struct _GTlsFileDatabaseInterface GTlsFileDatabaseInterface;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gio
{

/** TlsFileDatabase - TLS file based database type.
 * TlsFileDatabase is implemented by TlsDatabase objects which load their
 * certificate information from a file. It is an interface which TLS library
 * specific subtypes implement.
 *
 * @newin{2,36}
 */
class TlsFileDatabase
: public Glib::Interface,
  public TlsDatabase
{
  _CLASS_INTERFACE(TlsFileDatabase, GTlsFileDatabase, G_TLS_FILE_DATABASE, GTlsFileDatabaseInterface)

public:
  //TODO: Should this create() method be in TlsDatabase since the _new()
  //function returns a GTlsDatabase?
  //  No, it's normal for a G* C API to return a base type, but we correct that in C++.
  //  For instance, many GTK+ _new() functions return GtkWidget*. murrayc.

  //TODO: It is not possible to use _WRAP_CTOR()/WRAP_CREATE() here because this
  //class is an interface.
  //  So, should we make it possible to use them? murrayc.
#m4 _CONVERSION(`GTlsDatabase*',`Glib::RefPtr<TlsFileDatabase>',`Glib::wrap(G_TLS_FILE_DATABASE($3))')
  _WRAP_METHOD(static Glib::RefPtr<TlsFileDatabase> create(const std::string& anchors), g_tls_file_database_new, errthrow)

  _WRAP_PROPERTY("anchors", std::string)
};

} // namespace Gio
